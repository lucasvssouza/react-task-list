{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\(React)Task_List\\\\src\\\\components\\\\AppContext\\\\AppProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport AppContext from \"./AppContext\";\nimport { useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLocalStorage = () => {\n  const data = localStorage.getItem(\"task\");\n\n  if (data) {\n    return JSON.parse(data);\n  } else {\n    return [];\n  }\n};\n\nexport default function AppProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [getTaskList, setTaskList] = useState(getLocalStorage());\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      getTaskList,\n      setTaskList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppProvider, \"QTcGBn+cyE7MaCHISf+phMUPLvs=\");\n\n_c = AppProvider;\nexport function useTaskList() {\n  _s2();\n\n  const context = useContext(AppContext);\n  const {\n    getTaskList,\n    setTaskList\n  } = context;\n  return {\n    getTaskList,\n    setTaskList\n  };\n}\n\n_s2(useTaskList, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/(React)Task_List/src/components/AppContext/AppProvider.js"],"names":["AppContext","useContext","useState","getLocalStorage","data","localStorage","getItem","JSON","parse","AppProvider","children","getTaskList","setTaskList","useTaskList","context"],"mappings":";;;;AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;;AACA,MAAIF,IAAJ,EAAU;AACR,WAAOG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CAPD;;AASA,eAAe,SAASK,WAAT,OAAmC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAChD,QAAM,CAACC,WAAD,EAAcC,WAAd,IAA6BV,QAAQ,CAACC,eAAe,EAAhB,CAA3C;AAEA,sBACE,QAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,WADK;AAELC,MAAAA;AAFK,KADT;AAAA,cAMGF;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAbuBD,W;;KAAAA,W;AAexB,OAAO,SAASI,WAAT,GAAuB;AAAA;;AAC5B,QAAMC,OAAO,GAAGb,UAAU,CAACD,UAAD,CAA1B;AACA,QAAM;AAAEW,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA+BE,OAArC;AACA,SAAO;AAAEH,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAP;AACD;;IAJeC,W","sourcesContent":["import AppContext from \"./AppContext\";\r\nimport { useContext, useState } from \"react\";\r\n\r\nconst getLocalStorage = () => {\r\n  const data = localStorage.getItem(\"task\");\r\n  if (data) {\r\n    return JSON.parse(data);\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport default function AppProvider({ children }) {\r\n  const [getTaskList, setTaskList] = useState(getLocalStorage());\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        getTaskList,\r\n        setTaskList,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTaskList() {\r\n  const context = useContext(AppContext);\r\n  const { getTaskList, setTaskList } = context;\r\n  return { getTaskList, setTaskList };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}