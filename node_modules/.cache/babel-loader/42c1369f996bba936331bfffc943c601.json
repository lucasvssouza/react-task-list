{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\tasklist2\\\\src\\\\components\\\\AppContext\\\\AppProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport AppContext from \"./AppContext\";\nimport { useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [getText, setText] = useState('');\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      getText,\n      setText\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppProvider, \"kVL+Y4Flav49VlofV/OjvxFvtiY=\");\n\n_c = AppProvider;\nexport function useText() {\n  _s2();\n\n  const context = useContext(AppContext);\n  const {\n    getText,\n    setText\n  } = context;\n}\n\n_s2(useText, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/tasklist2/src/components/AppContext/AppProvider.js"],"names":["AppContext","useContext","useState","AppProvider","children","getText","setText","useText","context"],"mappings":";;;;AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;;AAEA,eAAe,SAASC,WAAT,OAAoC;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAC/C,QAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBJ,QAAQ,CAAC,EAAD,CAAnC;AAEA,sBACI,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AACxBG,MAAAA,OADwB;AAExBC,MAAAA;AAFwB,KAA5B;AAAA,cAIKF;AAJL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAZuBD,W;;KAAAA,W;AAcxB,OAAO,SAASI,OAAT,GAAmB;AAAA;;AACtB,QAAMC,OAAO,GAAGP,UAAU,CAACD,UAAD,CAA1B;AACA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsBE,OAA5B;AAEH;;IAJeD,O","sourcesContent":["import AppContext from \"./AppContext\"\r\nimport { useContext, useState } from \"react\"\r\n\r\nexport default function AppProvider ( {children} ) {\r\n    const [getText, setText] = useState('')\r\n\r\n    return (\r\n        <AppContext.Provider value={{\r\n            getText, \r\n            setText,\r\n            }}>\r\n            {children}    \r\n        </AppContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport function useText (){\r\n    const context = useContext(AppContext)\r\n    const { getText, setText} = context\r\n\r\n}"]},"metadata":{},"sourceType":"module"}