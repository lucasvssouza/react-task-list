{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\(React)Task_List\\\\src\\\\components\\\\AddTask\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { useText, useTaskList } from \"../AppContext/AppProvider\";\nimport { Toast } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport addstyle from \"./addstyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTask = () => {\n  _s();\n\n  const {\n    getText,\n    setText\n  } = useText();\n  const {\n    getTaskList,\n    setTaskList\n  } = useTaskList();\n  const [showModal, setShowModal] = useState(false);\n  const target = useRef(\"\"); /// Função de envio de formulario\n\n  const createTask = e => {\n    e.preventDefault();\n    var checkText = target.current.value.toString().indexOf(\" \");\n\n    if (checkText !== 0 && target.current.value !== \"\" && target.current.value !== null) {\n      /// Criar objeto \"tarefa\"\n      let newtask = {\n        id: new Date().getTime().toString(),\n        name: target.current.value,\n        done: false\n      }; /// Salvar objeto \"tarefa\" no array\n\n      setTaskList([...getTaskList, newtask]);\n      setText(\"\");\n      setShowModal(false);\n      target.current.value = \"\";\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(Toast, {\n        children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"holder.js/20x20?text=%20\",\n            className: \"rounded me-2\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"me-auto\",\n            children: \"Bootstrap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"11 mins ago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n          children: \"Hello, world! This is a toast message.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this);\n\n      setShowModal(true);\n      setText(\"\");\n      target.current.value = \"\";\n    }\n  }; /// Salvar no localstorage\n\n\n  useEffect(() => {\n    localStorage.setItem(\"task\", JSON.stringify(getTaskList));\n  }, [getTaskList]);\n  return (\n    /*#__PURE__*/\n    /// Inicio do formulario\n    _jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: createTask,\n      className: \"addtask\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Adicionar Tarefa\",\n        required: true,\n        ref: target,\n        className: \"addtext\",\n        maxLength: 45\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"addbutton\",\n        onClick: createTask,\n        children: \"\\u2795\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"aria-live\": \"polite\",\n        \"aria-atomic\": \"true\",\n        className: \"bg-dark position-relative\",\n        style: {\n          minHeight: '240px'\n        },\n        children: /*#__PURE__*/_jsxDEV(ToastContainer, {\n          position: \"top-end\",\n          className: \"p-3\",\n          children: [/*#__PURE__*/_jsxDEV(Toast, {\n            children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"holder.js/20x20?text=%20\",\n                className: \"rounded me-2\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"me-auto\",\n                children: \"Bootstrap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: \"just now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n              children: \"See? Just like this.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Toast, {\n            children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"holder.js/20x20?text=%20\",\n                className: \"rounded me-2\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"me-auto\",\n                children: \"Bootstrap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: \"2 seconds ago\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n              children: \"Heads up, toasts will stack automatically\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this) /// Fim do formulario\n\n  );\n};\n\n_s(AddTask, \"tRs9KungH9iziAbvuZ/RurZpiTg=\", false, function () {\n  return [useText, useTaskList];\n});\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/(React)Task_List/src/components/AddTask/AddTask.js"],"names":["useEffect","useState","useRef","useText","useTaskList","Toast","addstyle","AddTask","getText","setText","getTaskList","setTaskList","showModal","setShowModal","target","createTask","e","preventDefault","checkText","current","value","toString","indexOf","newtask","id","Date","getTime","name","done","localStorage","setItem","JSON","stringify","minHeight"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport { useText, useTaskList } from \"../AppContext/AppProvider\";\r\nimport { Toast } from \"react-bootstrap\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport addstyle from \"./addstyle.css\";\r\n\r\nexport const AddTask = () => {\r\n  const { getText, setText } = useText();\r\n  const { getTaskList, setTaskList } = useTaskList();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const target = useRef(\"\");\r\n\r\n    /// Função de envio de formulario\r\n  const createTask = (e) => {\r\n    e.preventDefault();\r\n\r\n    var checkText = target.current.value.toString().indexOf(\" \");\r\n\r\n    if (\r\n      checkText !== 0 &&\r\n      target.current.value !== \"\" &&\r\n      target.current.value !== null\r\n    ) {\r\n      /// Criar objeto \"tarefa\"\r\n      let newtask = {\r\n        id: new Date().getTime().toString(),\r\n        name: target.current.value,\r\n        done: false,\r\n      };\r\n      /// Salvar objeto \"tarefa\" no array\r\n      setTaskList([...getTaskList, newtask]);\r\n      setText(\"\");\r\n      setShowModal(false);\r\n      target.current.value = \"\";\r\n    } else {\r\n      <Toast>\r\n  <Toast.Header>\r\n    <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" />\r\n    <strong className=\"me-auto\">Bootstrap</strong>\r\n    <small>11 mins ago</small>\r\n  </Toast.Header>\r\n  <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\r\n</Toast>\r\n      setShowModal(true);\r\n      setText(\"\");\r\n      target.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  /// Salvar no localstorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"task\", JSON.stringify(getTaskList));\r\n  }, [getTaskList]);\r\n\r\n  return (\r\n    /// Inicio do formulario\r\n    <form autoComplete=\"off\" onSubmit={createTask} className=\"addtask\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Adicionar Tarefa\"\r\n        required\r\n        ref={target}\r\n        className=\"addtext\"\r\n        maxLength={45}\r\n      />\r\n      <button type=\"submit\" className=\"addbutton\" onClick={createTask}>\r\n        ➕\r\n      </button>\r\n      <div\r\n  aria-live=\"polite\"\r\n  aria-atomic=\"true\"\r\n  className=\"bg-dark position-relative\"\r\n  style={{ minHeight: '240px' }}\r\n>\r\n  <ToastContainer position=\"top-end\" className=\"p-3\">\r\n    <Toast>\r\n      <Toast.Header>\r\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" />\r\n        <strong className=\"me-auto\">Bootstrap</strong>\r\n        <small className=\"text-muted\">just now</small>\r\n      </Toast.Header>\r\n      <Toast.Body>See? Just like this.</Toast.Body>\r\n    </Toast>\r\n    <Toast>\r\n      <Toast.Header>\r\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" />\r\n        <strong className=\"me-auto\">Bootstrap</strong>\r\n        <small className=\"text-muted\">2 seconds ago</small>\r\n      </Toast.Header>\r\n      <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\r\n    </Toast>\r\n  </ToastContainer>\r\n</div>\r\n    </form>\r\n    \r\n    /// Fim do formulario\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}