{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\(React)Task_List\\\\src\\\\components\\\\AddTask\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { useText, useTaskList } from \"../AppContext/AppProvider\";\nimport { Overlay, Modal, Alert } from \"react-bootstrap\";\nimport addstyle from \"./addstyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTask = () => {\n  _s();\n\n  const {\n    getText,\n    setText\n  } = useText();\n  const {\n    getTaskList,\n    setTaskList\n  } = useTaskList();\n  const [showModal, setShowModal] = useState(false);\n  const target = useRef(\"\"); /// Função de envio de formulario\n\n  function TaskAlert() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      contentClassName: true,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        show: showModal,\n        variant: \"danger\",\n        onClose: () => setShowModal(false),\n        dismissible: true,\n        style: {\n          \"margin-bottom\": \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          style: {\n            \"margin-bottom\": \"0px\",\n            \"text-align\": \"center\"\n          },\n          children: \"Erro ao criar a tarefa!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A tarefa n\\xE3o pode estar vazia ou come\\xE7ar com um espa\\xE7o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this);\n  }\n\n  const createTask = e => {\n    e.preventDefault();\n    var checkText = target.current.value.toString().indexOf(\" \");\n\n    if (checkText !== 0 && target.current.value !== \"\" && target.current.value !== null) {\n      /// Criar objeto \"tarefa\"\n      let newtask = {\n        id: new Date().getTime().toString(),\n        name: target.current.value,\n        done: false\n      }; /// Salvar objeto \"tarefa\" no array\n\n      setTaskList([...getTaskList, newtask]);\n      setText(\"\");\n      setShowModal(false);\n      target.current.value = \"\";\n    } else {\n      setShowModal(true);\n    }\n  }; /// Salvar no localstorage\n\n\n  useEffect(() => {\n    localStorage.setItem(\"task\", JSON.stringify(getTaskList));\n  }, [getTaskList]);\n  return (\n    /*#__PURE__*/\n    /// Inicio do formulario\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        onSubmit: createTask,\n        className: \"addtask\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Adicionar Tarefa\",\n          required: true,\n          ref: target,\n          className: \"addtext\",\n          maxLength: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"addbutton\",\n          onClick: createTask,\n          children: \"\\u2795\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TaskAlert, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this) /// Fim do formulario\n\n  );\n};\n\n_s(AddTask, \"tRs9KungH9iziAbvuZ/RurZpiTg=\", false, function () {\n  return [useText, useTaskList];\n});\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/(React)Task_List/src/components/AddTask/AddTask.js"],"names":["useEffect","useState","useRef","useText","useTaskList","Overlay","Modal","Alert","addstyle","AddTask","getText","setText","getTaskList","setTaskList","showModal","setShowModal","target","TaskAlert","createTask","e","preventDefault","checkText","current","value","toString","indexOf","newtask","id","Date","getTime","name","done","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport { useText, useTaskList } from \"../AppContext/AppProvider\";\r\nimport { Overlay, Modal, Alert } from \"react-bootstrap\";\r\nimport addstyle from \"./addstyle.css\";\r\n\r\nexport const AddTask = () => {\r\n  const { getText, setText } = useText();\r\n  const { getTaskList, setTaskList } = useTaskList();\r\n\r\n\r\n  const [showModal, setShowModal] = useState(false)\r\n  const target = useRef(\"\");\r\n\r\n  /// Função de envio de formulario\r\n\r\n  function TaskAlert() {\r\n    return (\r\n        <Modal show={showModal} onHide={() => setShowModal(false)} contentClassName>\r\n          <Alert\r\n                  show={showModal}\r\n                  variant=\"danger\"\r\n                  onClose={() => setShowModal(false)}\r\n                  dismissible\r\n                  style={{\"margin-bottom\": \"0px\"}}\r\n                >\r\n                <Alert.Heading style={{\"margin-bottom\": \"0px\", \"text-align\": \"center\"}}>Erro ao criar a tarefa!</Alert.Heading>\r\n                  <p >A tarefa não pode estar vazia ou começar com um espaço</p>\r\n                </Alert>\r\n        </Modal>\r\n    )\r\n  }\r\n\r\n  const createTask = (e) => {\r\n    e.preventDefault();\r\n\r\n    var checkText = target.current.value.toString().indexOf(\" \");\r\n\r\n    if (\r\n      checkText !== 0 &&\r\n      target.current.value !== \"\" &&\r\n      target.current.value !== null\r\n    ) {\r\n      /// Criar objeto \"tarefa\"\r\n      let newtask = {\r\n        id: new Date().getTime().toString(),\r\n        name: target.current.value,\r\n        done: false,\r\n      };\r\n      /// Salvar objeto \"tarefa\" no array\r\n      setTaskList([...getTaskList, newtask]);\r\n      setText(\"\");\r\n      setShowModal(false);\r\n      target.current.value = \"\";\r\n    } else {\r\n      setShowModal(true);\r\n    }\r\n  };\r\n\r\n  /// Salvar no localstorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"task\", JSON.stringify(getTaskList));\r\n  }, [getTaskList]);\r\n\r\n  return (\r\n    /// Inicio do formulario\r\n    <div>\r\n      <form autoComplete=\"off\" onSubmit={createTask} className=\"addtask\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Adicionar Tarefa\"\r\n          required\r\n          ref={target}\r\n          className=\"addtext\"\r\n          maxLength={50}\r\n        />\r\n        <button type=\"submit\" className=\"addbutton\" onClick={createTask}>\r\n          ➕\r\n        </button>\r\n        <TaskAlert></TaskAlert>\r\n      </form>\r\n      \r\n    </div>\r\n\r\n    /// Fim do formulario\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}