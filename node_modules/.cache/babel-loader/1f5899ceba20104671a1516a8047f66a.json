{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\(React)Task_List\\\\src\\\\components\\\\ListTask\\\\ListTask.js\",\n    _s2 = $RefreshSig$();\n\nimport { useTaskList } from \"../AppContext/AppProvider\";\nimport { Modal, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState } from \"react\";\nimport liststyle from \"./liststyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ListTask = () => {\n  _s2();\n\n  const {\n    getTaskList,\n    setTaskList\n  } = useTaskList();\n  const [getUpdate, setUpdate] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: getTaskList.map(task => {\n      var _s = $RefreshSig$();\n\n      function delTask() {\n        var id = task.id;\n        const fill = getTaskList.filter(task => {\n          return task.id !== id;\n        });\n        setTaskList(fill);\n      }\n\n      function checkBox() {\n        if (task.done) {\n          task.done = false;\n          const boxUpdate = getTaskList.filter(() => {\n            return getTaskList;\n          });\n          setTaskList(boxUpdate);\n        } else {\n          task.done = true;\n          const boxUpdate = getTaskList.filter(() => {\n            return getTaskList;\n          });\n          setTaskList(boxUpdate);\n        }\n      }\n\n      function updateTask() {\n        const enteredName = prompt('Please enter your name');\n\n        if (enteredName != '' && enteredName !== null) {\n          task.name = enteredName;\n          const boxUpdate = getTaskList.filter(() => {\n            return getTaskList;\n          });\n          setTaskList(boxUpdate);\n          console.log(enteredName);\n        } else {\n          console.log('Aqui');\n        }\n      }\n\n      function Example() {\n        _s();\n\n        const [show, setShow] = useState(false);\n\n        const handleClose = () => setShow(false);\n\n        const handleShow = () => setShow(true);\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"editbutton\",\n            onClick: handleShow,\n            children: \"\\u270F\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: show,\n            onHide: handleClose,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Editar Tarefa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => setUpdate(e.target.value),\n                className: \"taskedit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: handleClose,\n                children: \"Fechar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: updateTask,\n                children: \"Salvar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true);\n      }\n\n      _s(Example, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasklist\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkbox\",\n          type: \"checkbox\",\n          checked: task.done,\n          onChange: checkBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"tasktext\",\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deletebutton\",\n          onClick: delTask,\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ListTask, \"tVn2CiPfdn1fNj1uAzuGEUUF5Co=\", false, function () {\n  return [useTaskList];\n});\n\n_c = ListTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/(React)Task_List/src/components/ListTask/ListTask.js"],"names":["useTaskList","Modal","Button","useState","liststyle","ListTask","getTaskList","setTaskList","getUpdate","setUpdate","map","task","delTask","id","fill","filter","checkBox","done","boxUpdate","updateTask","enteredName","prompt","name","console","log","Example","show","setShow","handleClose","handleShow","e","target","value"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,2BAA5B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,OAAO,sCAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA+BP,WAAW,EAAhD;AACA,QAAM,CAAEQ,SAAF,EAAaC,SAAb,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEA,sBACE;AAAA,cACGG,WAAW,CAACI,GAAZ,CAAiBC,IAAD,IAAU;AAAA;;AAEzB,eAASC,OAAT,GAAmB;AACjB,YAAIC,EAAE,GAAGF,IAAI,CAACE,EAAd;AACA,cAAMC,IAAI,GAAGR,WAAW,CAACS,MAAZ,CAAoBJ,IAAD,IAAU;AACxC,iBAAOA,IAAI,CAACE,EAAL,KAAYA,EAAnB;AACD,SAFY,CAAb;AAGAN,QAAAA,WAAW,CAACO,IAAD,CAAX;AACD;;AAED,eAASE,QAAT,GAAoB;AAClB,YAAIL,IAAI,CAACM,IAAT,EAAe;AACbN,UAAAA,IAAI,CAACM,IAAL,GAAY,KAAZ;AACA,gBAAMC,SAAS,GAAGZ,WAAW,CAACS,MAAZ,CAAmB,MAAM;AACzC,mBAAOT,WAAP;AACD,WAFiB,CAAlB;AAGAC,UAAAA,WAAW,CAACW,SAAD,CAAX;AACD,SAND,MAMO;AACLP,UAAAA,IAAI,CAACM,IAAL,GAAY,IAAZ;AACA,gBAAMC,SAAS,GAAGZ,WAAW,CAACS,MAAZ,CAAmB,MAAM;AACzC,mBAAOT,WAAP;AACD,WAFiB,CAAlB;AAGAC,UAAAA,WAAW,CAACW,SAAD,CAAX;AACD;AACF;;AAED,eAASC,UAAT,GAAsB;AAClB,cAAMC,WAAW,GAAGC,MAAM,CAAC,wBAAD,CAA1B;;AACA,YAAGD,WAAW,IAAI,EAAf,IAAqBA,WAAW,KAAK,IAAxC,EACA;AACIT,UAAAA,IAAI,CAACW,IAAL,GAAYF,WAAZ;AACA,gBAAMF,SAAS,GAAGZ,WAAW,CAACS,MAAZ,CAAmB,MAAM;AACzC,mBAAOT,WAAP;AACD,WAFiB,CAAlB;AAGAC,UAAAA,WAAW,CAACW,SAAD,CAAX;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACH,SARD,MAQK;AACDG,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;AACF;;AAED,eAASC,OAAT,GAAmB;AAAA;;AACjB,cAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,KAAD,CAAhC;;AAEA,cAAMyB,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,cAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AAEA,4BACE;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,YAAlB;AAA+B,YAAA,OAAO,EAAEE,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEH,IAAb;AAAmB,YAAA,MAAM,EAAEE,WAA3B;AAAA,oCACE,QAAC,KAAD,CAAO,MAAP;AAAc,cAAA,WAAW,MAAzB;AAAA,qCACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA,qCACE;AAAO,gBAAA,QAAQ,EAAGE,CAAD,IAAOrB,SAAS,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;AAAmD,gBAAA,SAAS,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE,QAAC,KAAD,CAAO,MAAP;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,OAAO,EAAEJ,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,SAAhB;AAA0B,gBAAA,OAAO,EAAET,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA,wBADF;AAwBD;;AAvEsB,SAyCdM,OAzCc;;AAyEvB,0BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,UADZ;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,OAAO,EAAEd,IAAI,CAACM,IAHhB;AAIE,UAAA,QAAQ,EAAED;AAJZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAO,UAAA,SAAS,EAAC,UAAjB;AAAA,oBAA6BL,IAAI,CAACW;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAEV,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,SAA+BD,IAAI,CAACE,EAApC;AAAA;AAAA;AAAA;AAAA,cADF;AAeH,KAxFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA6FD,CAjGM;;IAAMR,Q;UAC0BL,W;;;KAD1BK,Q","sourcesContent":["import { useTaskList } from \"../AppContext/AppProvider\"\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { useState } from \"react\"\r\nimport liststyle from \"./liststyle.css\"\r\n\r\nexport const ListTask = () => {\r\n  const { getTaskList, setTaskList } = useTaskList()\r\n  const [ getUpdate, setUpdate] = useState(\"\")\r\n\r\n  return (\r\n    <div>\r\n      {getTaskList.map((task) => {\r\n\r\n        function delTask() {\r\n          var id = task.id\r\n          const fill = getTaskList.filter((task) => {\r\n            return task.id !== id\r\n          })\r\n          setTaskList(fill)\r\n        }\r\n\r\n        function checkBox() {\r\n          if (task.done) {\r\n            task.done = false\r\n            const boxUpdate = getTaskList.filter(() => {\r\n              return getTaskList\r\n            })\r\n            setTaskList(boxUpdate)\r\n          } else {\r\n            task.done = true\r\n            const boxUpdate = getTaskList.filter(() => {\r\n              return getTaskList\r\n            })\r\n            setTaskList(boxUpdate)\r\n          }\r\n        }\r\n\r\n        function updateTask() {\r\n            const enteredName = prompt('Please enter your name')\r\n            if(enteredName != '' && enteredName !== null)\r\n            {\r\n                task.name = enteredName\r\n                const boxUpdate = getTaskList.filter(() => {\r\n                  return getTaskList\r\n                })\r\n                setTaskList(boxUpdate)\r\n                console.log(enteredName)\r\n            }else{\r\n                console.log('Aqui')\r\n            }\r\n          }  \r\n\r\n          function Example() {\r\n            const [show, setShow] = useState(false);\r\n          \r\n            const handleClose = () => setShow(false);\r\n            const handleShow = () => setShow(true);\r\n          \r\n            return (\r\n              <>\r\n                <button className=\"editbutton\" onClick={handleShow}>\r\n                ✏️\r\n                </button>\r\n          \r\n                <Modal show={show} onHide={handleClose}>\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>Editar Tarefa</Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    <input onChange={(e) => setUpdate(e.target.value)} className=\"taskedit\"></input>\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                      Fechar\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={updateTask}>\r\n                      Salvar\r\n                    </Button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              </>\r\n            )\r\n          }\r\n\r\n          return (\r\n            <div className=\"tasklist\" key={task.id}>\r\n              <input\r\n                className=\"checkbox\"\r\n                type=\"checkbox\"\r\n                checked={task.done}\r\n                onChange={checkBox}\r\n              ></input>\r\n              <label className=\"tasktext\">{task.name}</label>\r\n              <Example></Example>\r\n              <button className=\"deletebutton\" onClick={delTask}>\r\n                ❌\r\n              </button>\r\n            </div>\r\n          )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}