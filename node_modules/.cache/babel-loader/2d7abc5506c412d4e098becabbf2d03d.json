{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\tasklist2\\\\src\\\\components\\\\ListTask\\\\ListTask.js\",\n    _s = $RefreshSig$();\n\nimport { useTaskList } from '../AppContext/AppProvider';\nimport { useState } from 'react';\nimport liststyle from './liststyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListTask = () => {\n  _s();\n\n  const {\n    getTaskList,\n    setTaskList\n  } = useTaskList();\n  const [getUpdate, setUpdate] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskList\",\n    children: getTaskList.map(task => {\n      /// Função de deletetar tarefa     \n      function delTask() {\n        var id = task.id;\n        const fill = getTaskList.filter(task => {\n          return task.id !== id;\n        });\n        setTaskList(fill);\n      } /// Função de atualizar o status da variavel \"done\" da tarefa\n\n\n      function checkBox() {\n        if (task.done === false) {\n          task.done = true;\n          const boxUpdate = getTaskList.filter(() => {\n            return getTaskList;\n          });\n          setTaskList(boxUpdate);\n        } else {\n          task.done = false;\n          const boxUpdate = getTaskList.filter(() => {\n            return getTaskList;\n          });\n          setTaskList(boxUpdate);\n        }\n      }\n\n      function updateTask() {\n        if (task.update) {\n          task.name = getUpdate;\n          const boxUpdate = getTaskList.filter(() => {\n            return getTaskList;\n          });\n          setTaskList(boxUpdate);\n        }\n      }\n\n      function UserGreeting() {\n        return [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"tasktext\",\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"editbutton\",\n          onClick: updateTask,\n          children: \"\\u270F\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deletebutton\",\n          onClick: delTask,\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)];\n      }\n\n      function GuestGreeting() {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }, this);\n      }\n\n      function Greeting(e) {\n        const update = task.update;\n\n        if (update) {\n          return /*#__PURE__*/_jsxDEV(UserGreeting, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 28\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(GuestGreeting, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 24\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasklist\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkbox\",\n          type: \"checkbox\",\n          checked: task.done,\n          onChange: checkBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Greeting, {\n          isLoggedIn: task.done\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListTask, \"oAxVQu1xX11DsEAL86LZWwDb+wU=\", false, function () {\n  return [useTaskList];\n});\n\n_c = ListTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/tasklist2/src/components/ListTask/ListTask.js"],"names":["useTaskList","useState","liststyle","ListTask","getTaskList","setTaskList","getUpdate","setUpdate","map","task","delTask","id","fill","filter","checkBox","done","boxUpdate","updateTask","update","name","UserGreeting","GuestGreeting","Greeting","e"],"mappings":"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","sourcesContent":["import { useTaskList } from '../AppContext/AppProvider'\r\nimport { useState } from 'react'\r\nimport liststyle from './liststyle.css'\r\n\r\nexport const ListTask = () =>{\r\n    \r\n    const { getTaskList, setTaskList} = useTaskList()\r\n    const [ getUpdate, setUpdate ] = useState('')\r\n\r\n    return(\r\n        <div className=\"taskList\">\r\n            \r\n            {/* Renderizar a lista de tarefas */}\r\n            {getTaskList.map((task) => {\r\n\r\n            /// Função de deletetar tarefa     \r\n            function delTask(){\r\n                var id = task.id\r\n                const fill = getTaskList.filter((task) =>{\r\n                    return task.id !== id\r\n                })\r\n                setTaskList(fill)\r\n            }\r\n\r\n            /// Função de atualizar o status da variavel \"done\" da tarefa\r\n            function checkBox(){\r\n                if(task.done === false){\r\n                    task.done = true\r\n                    const boxUpdate = getTaskList.filter(() =>{\r\n                        return getTaskList\r\n                    })\r\n                    setTaskList(boxUpdate)\r\n                } else{\r\n                    task.done = false\r\n                    const boxUpdate = getTaskList.filter(() =>{\r\n                        return getTaskList\r\n                    })\r\n                    setTaskList(boxUpdate)\r\n                }\r\n            }\r\n\r\n            function updateTask(){\r\n                if(task.update){\r\n                    task.name = getUpdate\r\n                    const boxUpdate = getTaskList.filter(() =>{\r\n                        return getTaskList\r\n                    })\r\n                    setTaskList(boxUpdate)\r\n\r\n                }\r\n                    \r\n                }\r\n\r\n            function UserGreeting() {\r\n                return([\r\n                    <label className='tasktext'>{task.name}</label>,\r\n                    <button className='editbutton' onClick={updateTask}>✏️</button>,\r\n                    <button className='deletebutton' onClick={delTask}>❌</button>  \r\n                ])\r\n            }\r\n                  \r\n            function GuestGreeting() {\r\n                return <h1>{task.name}</h1>;\r\n                }\r\n\r\n                function Greeting(e) {\r\n                    const update = task.update\r\n                    if (update) {\r\n                    return <UserGreeting />;\r\n                }\r\n                return <GuestGreeting />;\r\n            }\r\n\r\n            return (\r\n                    <div className='tasklist' key={task.id}>\r\n                        <input \r\n                            className='checkbox'\r\n                            type=\"checkbox\"\r\n                            checked={task.done}\r\n                            onChange={checkBox}>\r\n                        </input>                        \r\n                        <Greeting isLoggedIn={task.done} />\r\n                    </div>\r\n                    )})}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}