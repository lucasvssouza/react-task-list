{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\(React)Task_List\\\\src\\\\components\\\\AddTask\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useText, useTaskList } from '../AppContext/AppProvider';\nimport addstyle from './addstyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTask = () => {\n  _s();\n\n  const {\n    getText,\n    setText\n  } = useText();\n  const {\n    getTaskList,\n    setTaskList\n  } = useTaskList(); /// Função de envio de formulario\n\n  const createTask = e => {\n    e.preventDefault();\n    var checkText = getText.toString().indexOf(\" \");\n\n    if (checkText !== 0) {\n      /// Criar objeto \"tarefa\"\n      let newtask = {\n        id: new Date().getTime().toString(),\n        name: getText,\n        done: false\n      }; /// Salvar objeto \"tarefa\" no array\n\n      setTaskList([...getTaskList, newtask]);\n      setText('');\n    } else {\n      setText('');\n    }\n  }; /// Salvar no localstorage \n\n\n  useEffect(() => {\n    localStorage.setItem('task', JSON.stringify(getTaskList));\n  }, [getTaskList]);\n  return (\n    /*#__PURE__*/\n    /// Inicio do formulario     \n    _jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: createTask,\n      className: \"addtask\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Adicionar Tarefa\",\n        required: true,\n        onChange: e => setText(e.target.value),\n        value: getText,\n        className: \"addtext\",\n        maxLength: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"addbutton\",\n        children: \"\\u2795\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this) /// Fim do formulario\n\n  );\n};\n\n_s(AddTask, \"LlzWSE/lDc2IxiABz0qdiAqKgeU=\", false, function () {\n  return [useText, useTaskList];\n});\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/(React)Task_List/src/components/AddTask/AddTask.js"],"names":["useEffect","useState","useText","useTaskList","addstyle","AddTask","getText","setText","getTaskList","setTaskList","createTask","e","preventDefault","checkText","toString","indexOf","newtask","id","Date","getTime","name","done","localStorage","setItem","JSON","stringify","target","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAmBC,QAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,2BAArC;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAK;AAAA;;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsBL,OAAO,EAAnC;AACA,QAAM;AAAEM,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA+BN,WAAW,EAAhD,CAFwB,CAIxB;;AAIA,QAAMO,UAAU,GAAIC,CAAD,IAAM;AACrBA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,SAAS,GAAGP,OAAO,CAACQ,QAAR,GAAmBC,OAAnB,CAA2B,GAA3B,CAAhB;;AACA,QAAGF,SAAS,KAAK,CAAjB,EAAmB;AACnB;AACA,UAAIG,OAAO,GAAG;AACVC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,GAAqBL,QAArB,EADM;AAEVM,QAAAA,IAAI,EAAEd,OAFI;AAGVe,QAAAA,IAAI,EAAE;AAHI,OAAd,CAFmB,CAOnB;;AACAZ,MAAAA,WAAW,CAAC,CAAC,GAAGD,WAAJ,EAAiBQ,OAAjB,CAAD,CAAX;AACAT,MAAAA,OAAO,CAAC,EAAD,CAAP;AACC,KAVD,MAUM;AACFA,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAjBD,CARwB,CA8BxB;;;AACAP,EAAAA,SAAS,CAAC,MAAI;AACVsB,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAejB,WAAf,CAA7B;AACH,GAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;AAIA;AAAA;AACI;AACI;AAAM,MAAA,YAAY,EAAC,KAAnB;AAAyB,MAAA,QAAQ,EAAEE,UAAnC;AAA+C,MAAA,SAAS,EAAC,SAAzD;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,kBAA/B;AAAkD,QAAA,QAAQ,MAA1D;AAA2D,QAAA,QAAQ,EAAGC,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACe,MAAF,CAASC,KAAV,CAAnF;AAAqG,QAAA,KAAK,EAAErB,OAA5G;AAAqH,QAAA,SAAS,EAAC,SAA/H;AAAyI,QAAA,SAAS,EAAE;AAApJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,CAQI;;AARJ;AAUH,CA7CM;;GAAMD,O;UACmBH,O,EACSC,W;;;KAF5BE,O","sourcesContent":["import { useEffect,useState }  from 'react'\r\nimport { useText, useTaskList } from '../AppContext/AppProvider'\r\nimport addstyle from './addstyle.css'\r\n\r\nexport const AddTask = () =>{\r\n    const { getText, setText} = useText()\r\n    const { getTaskList, setTaskList } = useTaskList()\r\n\r\n    /// Função de envio de formulario\r\n\r\n\r\n\r\n    const createTask = (e) =>{\r\n        e.preventDefault()\r\n\r\n        var checkText = getText.toString().indexOf(\" \")\r\n        if(checkText !== 0){\r\n        /// Criar objeto \"tarefa\"\r\n        let newtask = {\r\n            id: new Date().getTime().toString(),\r\n            name: getText,\r\n            done: false\r\n        }\r\n        /// Salvar objeto \"tarefa\" no array\r\n        setTaskList([...getTaskList, newtask])\r\n        setText('')\r\n        } else{\r\n            setText('')\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    /// Salvar no localstorage \r\n    useEffect(()=>{\r\n        localStorage.setItem('task', JSON.stringify(getTaskList))\r\n    },[getTaskList])\r\n\r\n    return(\r\n        /// Inicio do formulario     \r\n            <form autoComplete=\"off\" onSubmit={createTask} className=\"addtask\">\r\n                <input type='text' placeholder=\"Adicionar Tarefa\" required onChange={(e) => setText(e.target.value)} value={getText} className='addtext' maxLength={50} />\r\n                <button type=\"submit\" className='addbutton'>\r\n                ➕\r\n                </button>\r\n            </form>\r\n        /// Fim do formulario\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}