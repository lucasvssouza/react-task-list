{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\tasklist2\\\\src\\\\components\\\\ListTask\\\\ListTask.js\",\n    _s = $RefreshSig$();\n\nimport { useTaskList } from '../AppContext/AppProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListTask = () => {\n  _s();\n\n  const {\n    getTaskList,\n    setTaskList\n  } = useTaskList();\n  var teste = localStorage.getItem('task');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskList\",\n    children: getTaskList.map(task => {\n      function checkBox() {\n        if (task.done === false) {\n          task.done = true;\n          var update = getTaskList;\n          console.log(getTaskList);\n          setTaskList(getTaskList);\n          document.getElementById(\"checkbox\").checked = true;\n        } else {\n          task.done = false;\n          var update = getTaskList;\n          console.log(getTaskList);\n          setTaskList(update);\n        }\n      }\n\n      function delTask() {\n        var id = task.id;\n        const fill = getTaskList.filter(task => {\n          return task.id !== id;\n        });\n        setTaskList(fill);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: teste\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"checkbox\",\n          type: \"checkbox\",\n          checked: task.done,\n          onChange: e => setTaskList(getTaskList),\n          onClick: checkBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: delTask,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListTask, \"WgH/NuAAqteKJ8DRThuNlUbg+To=\", false, function () {\n  return [useTaskList];\n});\n\n_c = ListTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/tasklist2/src/components/ListTask/ListTask.js"],"names":["useTaskList","ListTask","getTaskList","setTaskList","teste","localStorage","getItem","map","task","checkBox","done","update","console","log","document","getElementById","checked","delTask","id","fill","filter","e","name"],"mappings":";;;AAAA,SAAQA,WAAR,QAA0B,2BAA1B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAK;AAAA;;AAEzB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA8BH,WAAW,EAA/C;AAEA,MAAII,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cAGKJ,WAAW,CAACK,GAAZ,CAAiBC,IAAD,IAAU;AAG3B,eAASC,QAAT,GAAoB;AAChB,YAAGD,IAAI,CAACE,IAAL,KAAc,KAAjB,EAAuB;AACnBF,UAAAA,IAAI,CAACE,IAAL,GAAY,IAAZ;AACA,cAAIC,MAAM,GAAGT,WAAb;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AACAC,UAAAA,WAAW,CAACD,WAAD,CAAX;AACAY,UAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,OAApC,GAA8C,IAA9C;AACH,SAND,MAMM;AACFR,UAAAA,IAAI,CAACE,IAAL,GAAY,KAAZ;AACA,cAAIC,MAAM,GAAGT,WAAb;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AACAC,UAAAA,WAAW,CAACQ,MAAD,CAAX;AACH;AACJ;;AAED,eAASM,OAAT,GAAkB;AACd,YAAIC,EAAE,GAAGV,IAAI,CAACU,EAAd;AACI,cAAMC,IAAI,GAAGjB,WAAW,CAACkB,MAAZ,CAAoBZ,IAAD,IAAS;AACzC,iBAAOA,IAAI,CAACU,EAAL,KAAYA,EAAnB;AACH,SAFgB,CAAb;AAGJf,QAAAA,WAAW,CAACgB,IAAD,CAAX;AACH;;AAED,0BAEQ;AAAA,gCACI;AAAA,oBAAIf;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,EAAE,EAAC,UADP;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,OAAO,EAAEI,IAAI,CAACE,IAHlB;AAII,UAAA,QAAQ,EAAGW,CAAD,IAAOlB,WAAW,CAACD,WAAD,CAJhC;AAKI,UAAA,OAAO,EAAEO;AALb;AAAA;AAAA;AAAA;AAAA,gBAFJ,eASI;AAAA,oBAAQD,IAAI,CAACc;AAAb;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI;AAAQ,UAAA,OAAO,EAAEL,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA,SAAUT,IAAI,CAACU,EAAf;AAAA;AAAA;AAAA;AAAA,cAFR;AAgBC,KA1CA;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH,CAtDM;;GAAMjB,Q;UAE2BD,W;;;KAF3BC,Q","sourcesContent":["import {useTaskList} from '../AppContext/AppProvider'\r\n\r\nexport const ListTask = () =>{\r\n    \r\n    const { getTaskList, setTaskList} = useTaskList()\r\n\r\n    var teste = localStorage.getItem('task')\r\n    return(\r\n        <div className=\"taskList\">\r\n            \r\n            {/* Renderizar a lista de tarefas */}\r\n            {getTaskList.map((task) => {\r\n\r\n\r\n            function checkBox (){\r\n                if(task.done === false){\r\n                    task.done = true\r\n                    var update = getTaskList\r\n                    console.log(getTaskList)\r\n                    setTaskList(getTaskList)\r\n                    document.getElementById(\"checkbox\").checked = true;\r\n                } else{\r\n                    task.done = false\r\n                    var update = getTaskList\r\n                    console.log(getTaskList)\r\n                    setTaskList(update)\r\n                }\r\n            }\r\n                        \r\n            function delTask(){\r\n                var id = task.id\r\n                    const fill = getTaskList.filter((task) =>{\r\n                    return task.id !== id\r\n                })\r\n                setTaskList(fill)\r\n            }\r\n\r\n            return (\r\n                \r\n                    <div key={task.id}>\r\n                        <p>{teste}</p>\r\n                        <input \r\n                            id='checkbox'\r\n                            type=\"checkbox\"\r\n                            checked={task.done}\r\n                            onChange={(e) => setTaskList(getTaskList)}\r\n                            onClick={checkBox}>\r\n                        </input>\r\n                        <label>{task.name}</label>\r\n                        <button onClick={delTask}>X</button>               \r\n                    </div>\r\n\r\n                    )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}