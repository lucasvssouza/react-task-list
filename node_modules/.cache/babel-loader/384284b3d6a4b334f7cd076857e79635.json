{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\(React)Task_List\\\\src\\\\components\\\\AddTask\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { useText, useTaskList } from \"../AppContext/AppProvider\";\nimport { Overlay, Tooltip, Alert } from \"react-bootstrap\";\nimport addstyle from \"./addstyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTask = () => {\n  _s();\n\n  const {\n    getText,\n    setText\n  } = useText();\n  const {\n    getTaskList,\n    setTaskList\n  } = useTaskList();\n  const [show, setShow] = useState(false);\n  const target = useRef(null); /// Função de envio de formulario\n\n  function Example() {}\n\n  const createTask = e => {\n    e.preventDefault();\n    var checkText = getText.toString().indexOf(\" \");\n\n    if (checkText !== 0) {\n      /// Criar objeto \"tarefa\"\n      let newtask = {\n        id: new Date().getTime().toString(),\n        name: getText,\n        done: false\n      }; /// Salvar objeto \"tarefa\" no array\n\n      setTaskList([...getTaskList, newtask]);\n      setText(\"\");\n    } else {\n      setText(\"\");\n    }\n  }; /// Salvar no localstorage\n\n\n  useEffect(() => {\n    localStorage.setItem(\"task\", JSON.stringify(getTaskList));\n  }, [getTaskList]);\n  return (\n    /*#__PURE__*/\n    /// Inicio do formulario\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        onSubmit: createTask,\n        className: \"addtask\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Adicionar Tarefa\",\n          required: true,\n          onChange: e => setText(e.target.value),\n          value: getText,\n          ref: target,\n          className: \"addtext\",\n          maxLength: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"addbutton\",\n          onClick: () => setShow(true),\n          children: \"\\u2795\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this) /// Fim do formulario\n\n  );\n};\n\n_s(AddTask, \"GeuxroWt6mbqnp+LXMe01fkclGk=\", false, function () {\n  return [useText, useTaskList];\n});\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/(React)Task_List/src/components/AddTask/AddTask.js"],"names":["useEffect","useState","useRef","useText","useTaskList","Overlay","Tooltip","Alert","addstyle","AddTask","getText","setText","getTaskList","setTaskList","show","setShow","target","Example","createTask","e","preventDefault","checkText","toString","indexOf","newtask","id","Date","getTime","name","done","localStorage","setItem","JSON","stringify","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,2BAArC;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,KAA3B,QAAwC,iBAAxC;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBR,OAAO,EAApC;AACA,QAAM;AAAES,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA+BT,WAAW,EAAhD;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMe,MAAM,GAAGd,MAAM,CAAC,IAAD,CAArB,CAJ2B,CAM3B;;AAEA,WAASe,OAAT,GAAmB,CAElB;;AAED,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,SAAS,GAAGX,OAAO,CAACY,QAAR,GAAmBC,OAAnB,CAA2B,GAA3B,CAAhB;;AACA,QAAIF,SAAS,KAAK,CAAlB,EAAqB;AACnB;AACA,UAAIG,OAAO,GAAG;AACZC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,GAAqBL,QAArB,EADQ;AAEZM,QAAAA,IAAI,EAAElB,OAFM;AAGZmB,QAAAA,IAAI,EAAE;AAHM,OAAd,CAFmB,CAOnB;;AACAhB,MAAAA,WAAW,CAAC,CAAC,GAAGD,WAAJ,EAAiBY,OAAjB,CAAD,CAAX;AACAb,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KAVD,MAUO;AACLA,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GAjBD,CAZ2B,CA+B3B;;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAerB,WAAf,CAA7B;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA;AAAA;AACE;AACA;AAAA,8BACE;AAAM,QAAA,YAAY,EAAC,KAAnB;AAAyB,QAAA,QAAQ,EAAEM,UAAnC;AAA+C,QAAA,SAAS,EAAC,SAAzD;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,kBAFd;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,QAAQ,EAAGC,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACH,MAAF,CAASkB,KAAV,CAJ1B;AAKE,UAAA,KAAK,EAAExB,OALT;AAME,UAAA,GAAG,EAAEM,MANP;AAOE,UAAA,SAAS,EAAC,SAPZ;AAQE,UAAA,SAAS,EAAE;AARb;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,WAFZ;AAGE,UAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,IAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAoBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAyBE;;AAzBF;AA2BD,CA/DM;;GAAMN,O;UACkBN,O,EACQC,W;;;KAF1BK,O","sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport { useText, useTaskList } from \"../AppContext/AppProvider\";\r\nimport { Overlay, Tooltip, Alert } from \"react-bootstrap\";\r\nimport addstyle from \"./addstyle.css\";\r\n\r\nexport const AddTask = () => {\r\n  const { getText, setText } = useText();\r\n  const { getTaskList, setTaskList } = useTaskList();\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  /// Função de envio de formulario\r\n\r\n  function Example() {\r\n   \r\n  }\r\n\r\n  const createTask = (e) => {\r\n    e.preventDefault();\r\n\r\n    var checkText = getText.toString().indexOf(\" \");\r\n    if (checkText !== 0) {\r\n      /// Criar objeto \"tarefa\"\r\n      let newtask = {\r\n        id: new Date().getTime().toString(),\r\n        name: getText,\r\n        done: false,\r\n      };\r\n      /// Salvar objeto \"tarefa\" no array\r\n      setTaskList([...getTaskList, newtask]);\r\n      setText(\"\");\r\n    } else {\r\n      setText(\"\");\r\n    }\r\n  };\r\n\r\n  /// Salvar no localstorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"task\", JSON.stringify(getTaskList));\r\n  }, [getTaskList]);\r\n\r\n  return (\r\n    /// Inicio do formulario\r\n    <div>\r\n      <form autoComplete=\"off\" onSubmit={createTask} className=\"addtask\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Adicionar Tarefa\"\r\n          required\r\n          onChange={(e) => setText(e.target.value)}\r\n          value={getText}\r\n          ref={target}\r\n          className=\"addtext\"\r\n          maxLength={50}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"addbutton\"\r\n          onClick={() => setShow(true)}\r\n        >\r\n          ➕\r\n        </button>\r\n      </form>\r\n      <Example></Example>\r\n    </div>\r\n\r\n    /// Fim do formulario\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}