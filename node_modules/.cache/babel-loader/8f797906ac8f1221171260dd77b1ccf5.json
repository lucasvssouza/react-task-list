{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\tasklist2\\\\src\\\\components\\\\AddTask\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLocalStorage = () => {\n  const data = localStorage.getItem('task');\n\n  if (data) {\n    return JSON.parse(data);\n  } else {\n    return [];\n  }\n};\n\nexport const AddTask = () => {\n  _s();\n\n  /// Definir state\n  const [getText, setText] = useState(''); /// Lista de array\n\n  const [getTaskList, setTaskList] = useState(getLocalStorage()); /// Função de envio de formulario\n\n  const createTask = e => {\n    e.preventDefault(); /// Criar objeto \"tarefa\"\n\n    let newtask = {\n      id: new Date().getTime().toString(),\n      name: getText,\n      done: false\n    };\n    setTaskList([...getTaskList, newtask]);\n    setText('');\n  }; /// Salvar no localstorage\n\n\n  useEffect(() => {\n    localStorage.setItem('task', JSON.stringify(getTaskList));\n  }, [getTaskList]);\n  return (\n    /*#__PURE__*/\n    /// Inicio do formulario\n    _jsxDEV(\"div\", {\n      className: \"form\",\n      onSubmit: createTask,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Adicionar Tarefa\",\n          required: true,\n          onChange: e => setText(e.target.value),\n          value: getText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) /// Fim do formulario\n\n  );\n};\n\n_s(AddTask, \"XijKsbaWqhSMAB1TeQb54KP5Rtc=\");\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/tasklist2/src/components/AddTask/AddTask.js"],"names":["useState","useEffect","getLocalStorage","data","localStorage","getItem","JSON","parse","AddTask","getText","setText","getTaskList","setTaskList","createTask","e","preventDefault","newtask","id","Date","getTime","toString","name","done","setItem","stringify","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAqC,OAArC;;;AAEA,MAAMC,eAAe,GAAG,MAAK;AACzB,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAsB,MAAtB,CAAb;;AACA,MAAGF,IAAH,EAAQ;AACJ,WAAOG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;AACH,GAFD,MAEK;AACD,WAAO,EAAP;AACH;AACJ,CAPD;;AASA,OAAO,MAAMK,OAAO,GAAG,MAAK;AAAA;;AAExB;AACA,QAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBV,QAAQ,CAAC,EAAD,CAAnC,CAHwB,CAKxB;;AACA,QAAM,CAACW,WAAD,EAAcC,WAAd,IAA6BZ,QAAQ,CAACE,eAAe,EAAhB,CAA3C,CANwB,CAQxB;;AACA,QAAMW,UAAU,GAAIC,CAAD,IAAM;AACrBA,IAAAA,CAAC,CAACC,cAAF,GADqB,CAGrB;;AACA,QAAIC,OAAO,GAAG;AACVC,MAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,EADM;AAEVC,MAAAA,IAAI,EAAEZ,OAFI;AAGVa,MAAAA,IAAI,EAAE;AAHI,KAAd;AAMAV,IAAAA,WAAW,CAAC,CAAC,GAAGD,WAAJ,EAAiBK,OAAjB,CAAD,CAAX;AACAN,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAZD,CATwB,CAuBxB;;;AACAT,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,YAAY,CAACmB,OAAb,CAAqB,MAArB,EAA6BjB,IAAI,CAACkB,SAAL,CAAeb,WAAf,CAA7B;AACH,GAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;AAIA;AAAA;AACI;AACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,QAAQ,EAAEE,UAAhC;AAAA,6BACI;AAAM,QAAA,YAAY,EAAC,KAAnB;AAAA,gCACM;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,kBAA/B;AAAkD,UAAA,QAAQ,MAA1D;AAA2D,UAAA,QAAQ,EAAGC,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACW,MAAF,CAASC,KAAV,CAAnF;AAAqG,UAAA,KAAK,EAAEjB;AAA5G;AAAA;AAAA;AAAA;AAAA,gBADN,eAEQ;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,CAUI;;AAVJ;AAYH,CAxCM;;GAAMD,O;;KAAAA,O","sourcesContent":["import { useState, useEffect }  from 'react'\r\n\r\nconst getLocalStorage = () =>{\r\n    const data = localStorage.getItem ('task')\r\n    if(data){\r\n        return JSON.parse(data)\r\n    }else{\r\n        return []\r\n    }\r\n}\r\n\r\nexport const AddTask = () =>{\r\n\r\n    /// Definir state\r\n    const [getText, setText] = useState('')\r\n\r\n    /// Lista de array\r\n    const [getTaskList, setTaskList] = useState(getLocalStorage())\r\n\r\n    /// Função de envio de formulario\r\n    const createTask = (e) =>{\r\n        e.preventDefault()\r\n\r\n        /// Criar objeto \"tarefa\"\r\n        let newtask = {\r\n            id: new Date().getTime().toString(),\r\n            name: getText,\r\n            done: false\r\n        }\r\n\r\n        setTaskList([...getTaskList, newtask])\r\n        setText('')\r\n    }\r\n\r\n    /// Salvar no localstorage\r\n    useEffect(()=>{\r\n        localStorage.setItem('task', JSON.stringify(getTaskList))\r\n    },[getTaskList])\r\n\r\n    return(\r\n        /// Inicio do formulario\r\n        <div className=\"form\" onSubmit={createTask}>\r\n            <form autoComplete=\"off\">\r\n                  <input type='text' placeholder=\"Adicionar Tarefa\" required onChange={(e) => setText(e.target.value)} value={getText} />\r\n                    <button type=\"submit\">\r\n                      +\r\n                    </button>\r\n            </form>\r\n        </div>\r\n        /// Fim do formulario\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}