{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\tasklist2\\\\src\\\\components\\\\ListTask\\\\ListTask.js\",\n    _s = $RefreshSig$();\n\nimport { useTaskList } from '../AppContext/AppProvider';\nimport { useState } from 'react';\nimport liststyle from './liststyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListTask = () => {\n  _s();\n\n  const {\n    getTaskList,\n    setTaskList\n  } = useTaskList();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskList\",\n    children: getTaskList.map(task => {\n      /// Função de deletetar tarefa     \n      function delTask() {\n        var id = task.id;\n        const fill = getTaskList.filter(task => {\n          return task.id !== id;\n        });\n        setTaskList(fill);\n      } /// Função de atualizar o status da variavel \"done\" da tarefa\n\n\n      function checkBox() {\n        if (task.done === false) {\n          task.done = true;\n          const boxUpdate = getTaskList.filter(() => {\n            return getTaskList;\n          });\n          setTaskList(boxUpdate);\n        } else {\n          task.done = false;\n          const boxUpdate = getTaskList.filter(() => {\n            return getTaskList;\n          });\n          setTaskList(boxUpdate);\n        }\n      }\n\n      function updateTask() {\n        if (task.done === false) {\n          task.name = true;\n          const boxUpdate = getTaskList.filter(() => {\n            return getTaskList;\n          });\n          setTaskList(boxUpdate);\n        } else {\n          task.name = false;\n          const boxUpdate = getTaskList.filter(() => {\n            return getTaskList;\n          });\n          setTaskList(boxUpdate);\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasklist\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkbox\",\n          type: \"checkbox\",\n          checked: task.done,\n          onChange: checkBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"tasktext\",\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: updateTask,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: task.name,\n            required: true,\n            defaultValue: task.name,\n            className: \"tasktext\",\n            maxLength: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deletebutton\",\n          onClick: delTask,\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListTask, \"WgH/NuAAqteKJ8DRThuNlUbg+To=\", false, function () {\n  return [useTaskList];\n});\n\n_c = ListTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/tasklist2/src/components/ListTask/ListTask.js"],"names":["useTaskList","useState","liststyle","ListTask","getTaskList","setTaskList","map","task","delTask","id","fill","filter","checkBox","done","boxUpdate","updateTask","name"],"mappings":"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","sourcesContent":["import { useTaskList } from '../AppContext/AppProvider'\r\nimport { useState } from 'react'\r\nimport liststyle from './liststyle.css'\r\n\r\nexport const ListTask = () =>{\r\n    \r\n    const { getTaskList, setTaskList} = useTaskList()\r\n\r\n    return(\r\n        <div className=\"taskList\">\r\n            \r\n            {/* Renderizar a lista de tarefas */}\r\n            {getTaskList.map((task) => {\r\n\r\n            /// Função de deletetar tarefa     \r\n            function delTask(){\r\n                var id = task.id\r\n                const fill = getTaskList.filter((task) =>{\r\n                    return task.id !== id\r\n                })\r\n                setTaskList(fill)\r\n            }\r\n\r\n            /// Função de atualizar o status da variavel \"done\" da tarefa\r\n            function checkBox(){\r\n                if(task.done === false){\r\n                    task.done = true\r\n                    const boxUpdate = getTaskList.filter(() =>{\r\n                        return getTaskList\r\n                    })\r\n                    setTaskList(boxUpdate)\r\n                } else{\r\n                    task.done = false\r\n                    const boxUpdate = getTaskList.filter(() =>{\r\n                        return getTaskList\r\n                    })\r\n                    setTaskList(boxUpdate)\r\n                }\r\n            }\r\n\r\n            function updateTask(){\r\n                if(task.done === false){\r\n                    task.name = true\r\n                    const boxUpdate = getTaskList.filter(() =>{\r\n                        return getTaskList\r\n                    })\r\n                    setTaskList(boxUpdate)\r\n                } else{\r\n                    task.name = false\r\n                    const boxUpdate = getTaskList.filter(() =>{\r\n                        return getTaskList\r\n                    })\r\n                    setTaskList(boxUpdate)\r\n                }\r\n            }\r\n\r\n            return (\r\n                    <div className='tasklist' key={task.id}>\r\n                        <input \r\n                            className='checkbox'\r\n                            type=\"checkbox\"\r\n                            checked={task.done}\r\n                            onChange={checkBox}>\r\n                        </input>\r\n                        <label className='tasktext'>{task.name}</label>\r\n                        <form onSubmit={updateTask}>\r\n                            <input type='text' placeholder={task.name} required defaultValue={task.name} className='tasktext' maxLength={50} />\r\n                        </form>\r\n                        <button className='deletebutton' onClick={delTask}>❌</button>               \r\n                    </div>\r\n                    )})}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}