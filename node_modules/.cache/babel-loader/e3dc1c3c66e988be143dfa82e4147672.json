{"ast":null,"code":"import _toConsumableArray from\"N:/Lucas/GitHub/publico/react-task-list/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{useEffect,useRef}from\"react\";import{useTaskList}from\"../AppContext/AppProvider\";import{toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";import addstyle from\"./addstyle.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var AddTask=function AddTask(){var _useTaskList=useTaskList(),getTaskList=_useTaskList.getTaskList,setTaskList=_useTaskList.setTaskList;var target=useRef(\"\");/// Função de envio de formulario\nvar createTask=function createTask(e){e.preventDefault();/// Remove os \"espaço\" iniciais do input\nvar name=target.current.value;while(name.charAt(0)===\" \"){name=name.substring(1);console.log(name);}/// Remove os \"espaço\" iniciais do input\nvar checkText=name.toString().indexOf(\" \");if(checkText!==0&&name!==null&&name!==\"\"){/// Salva a nova tarefa em um array\nvar newtask={id:new Date().getTime().toString(),name:name,done:false};/// Salva a nova tarefa em um array\n/// Salva o objeto \"tarefa\" no array\nsetTaskList([].concat(_toConsumableArray(getTaskList),[newtask]));/// Salva  o objeto \"tarefa\" no array\n/// Limpa o input\ntarget.current.value=\"\";/// Limpa o input\n/// Exibe alerta de sucesso\ntoast.success(\"Tarefa criada com sucesso!\",{position:\"top-right\",autoClose:5000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,theme:\"colored\",progress:undefined});/// Exibe alerta de sucesso\n}else{/// Exibe alerta de erro\ntoast.error(\"Não é possivel criar uma tarefa vazia!\",{position:\"top-right\",autoClose:5000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,theme:\"colored\",progress:undefined});/// Exibe alerta de erro\n/// Limpa o input\ntarget.current.value=\"\";/// Limpa o input\n}};/// Função de envio de formulario\n/// Salva a tarefa no localstorage\nuseEffect(function(){localStorage.setItem(\"task\",JSON.stringify(getTaskList));},[getTaskList]);/// Salva a tarefa no localstorage\n/// Formulario de cadastro\nreturn/*#__PURE__*/_jsxs(\"form\",{autoComplete:\"off\",onSubmit:createTask,className:\"addtask\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Adicionar Tarefa\",required:true,ref:target,className:\"addtext\",maxLength:45}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"addbutton\",onClick:createTask,children:\"\\u2795\"})]});/// Formulario de cadastro\n};","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/react-task-list/src/components/AddTask/AddTask.js"],"names":["useEffect","useRef","useTaskList","toast","addstyle","AddTask","getTaskList","setTaskList","target","createTask","e","preventDefault","name","current","value","charAt","substring","console","log","checkText","toString","indexOf","newtask","id","Date","getTime","done","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","progress","undefined","error","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport { useTaskList } from \"../AppContext/AppProvider\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport addstyle from \"./addstyle.css\";\r\n\r\nexport const AddTask = () => {\r\n  const { getTaskList, setTaskList } = useTaskList();\r\n  const target = useRef(\"\");\r\n\r\n  /// Função de envio de formulario\r\n  const createTask = (e) => {\r\n    e.preventDefault();\r\n    /// Remove os \"espaço\" iniciais do input\r\n    var name = target.current.value;\r\n    while (name.charAt(0) === \" \") {\r\n      name = name.substring(1);\r\n      console.log(name);\r\n    }\r\n    /// Remove os \"espaço\" iniciais do input\r\n    var checkText = name.toString().indexOf(\" \");\r\n    if (checkText !== 0 && name !== null && name !== \"\") {\r\n      /// Salva a nova tarefa em um array\r\n      let newtask = {\r\n        id: new Date().getTime().toString(),\r\n        name: name,\r\n        done: false,\r\n      };\r\n      /// Salva a nova tarefa em um array\r\n      /// Salva o objeto \"tarefa\" no array\r\n      setTaskList([...getTaskList, newtask]);\r\n      /// Salva  o objeto \"tarefa\" no array\r\n      /// Limpa o input\r\n      target.current.value = \"\";\r\n      /// Limpa o input\r\n      /// Exibe alerta de sucesso\r\n      toast.success(\"Tarefa criada com sucesso!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        theme: \"colored\",\r\n        progress: undefined,\r\n      });\r\n      /// Exibe alerta de sucesso\r\n    } else {\r\n      /// Exibe alerta de erro\r\n      toast.error(\"Não é possivel criar uma tarefa vazia!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        theme: \"colored\",\r\n        progress: undefined,\r\n      });\r\n      /// Exibe alerta de erro\r\n      /// Limpa o input\r\n      target.current.value = \"\";\r\n      /// Limpa o input\r\n    }\r\n  };\r\n  /// Função de envio de formulario\r\n\r\n  /// Salva a tarefa no localstorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"task\", JSON.stringify(getTaskList));\r\n  }, [getTaskList]);\r\n  /// Salva a tarefa no localstorage\r\n\r\n  /// Formulario de cadastro\r\n  return (\r\n    <form autoComplete=\"off\" onSubmit={createTask} className=\"addtask\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Adicionar Tarefa\"\r\n        required\r\n        ref={target}\r\n        className=\"addtext\"\r\n        maxLength={45}\r\n      />\r\n      <button type=\"submit\" className=\"addbutton\" onClick={createTask}>\r\n        ➕\r\n      </button>\r\n    </form>\r\n  );\r\n  /// Formulario de cadastro\r\n};\r\n"]},"metadata":{},"sourceType":"module"}