{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\(React)Task_List\\\\src\\\\components\\\\ListTask\\\\ListTask.js\",\n    _s = $RefreshSig$();\n\nimport { useTaskList } from \"../AppContext/AppProvider\";\nimport { Modal, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport liststyle from \"./liststyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListTask = () => {\n  _s();\n\n  const {\n    getTaskList,\n    setTaskList\n  } = useTaskList();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: getTaskList.map(task => {\n      function delTask() {\n        var id = task.id;\n        const fill = getTaskList.filter(task => {\n          return task.id !== id;\n        });\n        setTaskList(fill);\n      }\n\n      function checkBox() {\n        if (task.done) {\n          task.done = false;\n          const boxUpdate = getTaskList.filter(() => {\n            return getTaskList;\n          });\n          setTaskList(boxUpdate);\n        } else {\n          task.done = true;\n          const boxUpdate = getTaskList.filter(() => {\n            return getTaskList;\n          });\n          setTaskList(boxUpdate);\n        }\n      }\n\n      function updateTask() {\n        const enteredName = prompt('Please enter your name');\n\n        if (enteredName != '' && enteredName !== null) {\n          task.name = enteredName;\n          const boxUpdate = getTaskList.filter(() => {\n            return getTaskList;\n          });\n          setTaskList(boxUpdate);\n          console.log(enteredName);\n        } else {\n          console.log('Aqui');\n        }\n      }\n\n      function teste() {\n        /*#__PURE__*/\n        _jsxDEV(Modal.Dialog, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Modal title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Modal body text goes here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasklist\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkbox\",\n          type: \"checkbox\",\n          checked: task.done,\n          onChange: checkBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"tasktext\",\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"editbutton\",\n          onClick: teste,\n          children: \"\\u270F\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deletebutton\",\n          onClick: delTask,\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          type: \"button\",\n          onClick: teste,\n          children: \"Danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTask, \"sZF4+r8rE0bIOr2av7Pj6v5leOI=\", false, function () {\n  return [useTaskList];\n});\n\n_c = ListTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/(React)Task_List/src/components/ListTask/ListTask.js"],"names":["useTaskList","Modal","Button","liststyle","ListTask","getTaskList","setTaskList","map","task","delTask","id","fill","filter","checkBox","done","boxUpdate","updateTask","enteredName","prompt","name","console","log","teste"],"mappings":"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","sourcesContent":["import { useTaskList } from \"../AppContext/AppProvider\"\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport liststyle from \"./liststyle.css\"\r\n\r\nexport const ListTask = () => {\r\n  const { getTaskList, setTaskList } = useTaskList()\r\n\r\n  return (\r\n    <div>\r\n      {getTaskList.map((task) => {\r\n\r\n        function delTask() {\r\n          var id = task.id\r\n          const fill = getTaskList.filter((task) => {\r\n            return task.id !== id\r\n          })\r\n          setTaskList(fill)\r\n        }\r\n\r\n        function checkBox() {\r\n          if (task.done) {\r\n            task.done = false\r\n            const boxUpdate = getTaskList.filter(() => {\r\n              return getTaskList\r\n            })\r\n            setTaskList(boxUpdate)\r\n          } else {\r\n            task.done = true\r\n            const boxUpdate = getTaskList.filter(() => {\r\n              return getTaskList\r\n            })\r\n            setTaskList(boxUpdate)\r\n          }\r\n        }\r\n\r\n        function updateTask() {\r\n            const enteredName = prompt('Please enter your name')\r\n            if(enteredName != '' && enteredName !== null)\r\n            {\r\n                task.name = enteredName\r\n                const boxUpdate = getTaskList.filter(() => {\r\n                  return getTaskList\r\n                })\r\n                setTaskList(boxUpdate)\r\n                console.log(enteredName)\r\n            }else{\r\n                console.log('Aqui')\r\n            }\r\n          }  \r\n\r\n          function teste(){\r\n              <Modal.Dialog>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Modal title</Modal.Title>\r\n              </Modal.Header>\r\n\r\n              <Modal.Body>\r\n                <p>Modal body text goes here.</p>\r\n              </Modal.Body>\r\n\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\">Close</Button>\r\n                <Button variant=\"primary\">Save changes</Button>\r\n              </Modal.Footer>\r\n              </Modal.Dialog>\r\n          }\r\n\r\n          return (\r\n            <div className=\"tasklist\" key={task.id}>\r\n              <input\r\n                className=\"checkbox\"\r\n                type=\"checkbox\"\r\n                checked={task.done}\r\n                onChange={checkBox}\r\n              ></input>\r\n              <label className=\"tasktext\">{task.name}</label>\r\n              <button className=\"editbutton\" onClick={teste}>\r\n                ✏️\r\n              </button>\r\n              <button className=\"deletebutton\" onClick={delTask}>\r\n                ❌\r\n              </button>\r\n              <Button variant=\"danger\" type=\"button\" onClick={teste}>Danger</Button>\r\n            </div>\r\n          )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}