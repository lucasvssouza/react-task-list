{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\tasklist2\\\\src\\\\components\\\\AppTask.js\";\nimport AddTask from './AddTask/AddTask';\nimport ListTask from './ListTask/ListTask';\nimport { useState, useEffect } from 'react';\nimport AppProvider from './AppContext/AppProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLocalStorage = () => {\n  const data = localStorage.getItem('task');\n\n  if (data) {\n    return JSON.parse(data);\n  } else {\n    return [];\n  }\n};\n\nexport const AppTask = _ref => {\n  let {\n    getTaskList\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppProvider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n};\n_c = AppTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/tasklist2/src/components/AppTask.js"],"names":["AddTask","ListTask","useState","useEffect","AppProvider","getLocalStorage","data","localStorage","getItem","JSON","parse","AppTask","getTaskList"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,MAAMC,eAAe,GAAG,MAAK;AACzB,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;;AACA,MAAGF,IAAH,EAAQ;AACJ,WAAOG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;AACH,GAFD,MAEK;AACD,WAAO,EAAP;AACH;AACJ,CAPD;;AASA,OAAO,MAAMK,OAAO,GAAG,QAAmB;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;AAElC,sBACI;AAAA,2BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOP,CATM;KAAMD,O","sourcesContent":["import AddTask from './AddTask/AddTask'\r\nimport ListTask from './ListTask/ListTask'\r\nimport { useState, useEffect }  from 'react'\r\nimport AppProvider from './AppContext/AppProvider'\r\n\r\nconst getLocalStorage = () =>{\r\n    const data = localStorage.getItem('task')\r\n    if(data){\r\n        return JSON.parse(data)\r\n    }else{\r\n        return []\r\n    }\r\n}\r\n\r\nexport const AppTask = ({getTaskList}) => { \r\n\r\n        return(\r\n            <div>\r\n                <AppProvider></AppProvider>\r\n                \r\n            </div>\r\n        )\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}