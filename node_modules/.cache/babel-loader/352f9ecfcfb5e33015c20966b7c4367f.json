{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\(React)Task_List\\\\src\\\\components\\\\AddTask\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Toast, Row, Col, Button } from 'react-bootstrap';\nimport { useText, useTaskList } from '../AppContext/AppProvider';\nimport addstyle from './addstyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTask = () => {\n  _s();\n\n  const {\n    getText,\n    setText\n  } = useText();\n  const {\n    getTaskList,\n    setTaskList\n  } = useTaskList();\n  const [show, setShow] = useState(false); /// Função de envio de formulario\n\n  function Example() {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Toast, {\n          onClose: () => setShow(false),\n          show: show,\n          delay: 3000,\n          autohide: true,\n          children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"holder.js/20x20?text=%20\",\n              className: \"rounded me-2\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"me-auto\",\n              children: \"Bootstrap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"11 mins ago\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: \"Woohoo, you're reading this text in a Toast!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this);\n  }\n\n  const createTask = e => {\n    e.preventDefault();\n    setShow(true);\n    var checkText = getText.toString().indexOf(\" \");\n\n    if (checkText !== 0) {\n      /// Criar objeto \"tarefa\"\n      let newtask = {\n        id: new Date().getTime().toString(),\n        name: getText,\n        done: false\n      }; /// Salvar objeto \"tarefa\" no array\n\n      setTaskList([...getTaskList, newtask]);\n      setText('');\n    } else {\n      Example();\n    }\n  }; /// Salvar no localstorage \n\n\n  useEffect(() => {\n    localStorage.setItem('task', JSON.stringify(getTaskList));\n  }, [getTaskList]);\n  return (\n    /*#__PURE__*/\n    /// Inicio do formulario     \n    _jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: createTask,\n      className: \"addtask\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Adicionar Tarefa\",\n        required: true,\n        onChange: e => setText(e.target.value),\n        value: getText,\n        className: \"addtext\",\n        maxLength: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"addbutton\",\n        children: \"\\u2795\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this) /// Fim do formulario\n\n  );\n};\n\n_s(AddTask, \"StviUPOJCxuQ/ayclA+/BIvCAwA=\", false, function () {\n  return [useText, useTaskList];\n});\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/(React)Task_List/src/components/AddTask/AddTask.js"],"names":["useEffect","useState","Toast","Row","Col","Button","useText","useTaskList","addstyle","AddTask","getText","setText","getTaskList","setTaskList","show","setShow","Example","createTask","e","preventDefault","checkText","toString","indexOf","newtask","id","Date","getTime","name","done","localStorage","setItem","JSON","stringify","target","value"],"mappings":"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","sourcesContent":["import { useEffect,useState }  from 'react'\r\nimport { Toast,Row,Col,Button } from 'react-bootstrap'\r\nimport { useText, useTaskList } from '../AppContext/AppProvider'\r\nimport addstyle from './addstyle.css'\r\n\r\nexport const AddTask = () =>{\r\n    const { getText, setText} = useText()\r\n    const { getTaskList, setTaskList } = useTaskList()\r\n    const [show, setShow] = useState(false);\r\n\r\n    /// Função de envio de formulario\r\n\r\n    function Example() {\r\n        \r\n      \r\n        return (\r\n          <Row>\r\n            <Col xs={6}>\r\n              <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide>\r\n                <Toast.Header>\r\n                  <img\r\n                    src=\"holder.js/20x20?text=%20\"\r\n                    className=\"rounded me-2\"\r\n                    alt=\"\"\r\n                  />\r\n                  <strong className=\"me-auto\">Bootstrap</strong>\r\n                  <small>11 mins ago</small>\r\n                </Toast.Header>\r\n                <Toast.Body>Woohoo, you're reading this text in a Toast!</Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        );\r\n      }\r\n\r\n    const createTask = (e) =>{\r\n        e.preventDefault()\r\n        setShow(true)\r\n\r\n        var checkText = getText.toString().indexOf(\" \")\r\n        if(checkText !== 0){\r\n        /// Criar objeto \"tarefa\"\r\n        let newtask = {\r\n            id: new Date().getTime().toString(),\r\n            name: getText,\r\n            done: false\r\n        }\r\n        /// Salvar objeto \"tarefa\" no array\r\n        setTaskList([...getTaskList, newtask])\r\n        setText('')\r\n        } else{\r\n            Example()\r\n        }\r\n    }\r\n\r\n\r\n    /// Salvar no localstorage \r\n    useEffect(()=>{\r\n        localStorage.setItem('task', JSON.stringify(getTaskList))\r\n    },[getTaskList])\r\n\r\n    return(\r\n        /// Inicio do formulario     \r\n            <form autoComplete=\"off\" onSubmit={createTask} className=\"addtask\">\r\n                <input type='text' placeholder=\"Adicionar Tarefa\" required onChange={(e) => setText(e.target.value)} value={getText} className='addtext' maxLength={50} />\r\n                <button type=\"submit\" className='addbutton'>\r\n                ➕\r\n                </button>\r\n                <Example></Example>\r\n            </form>\r\n        /// Fim do formulario\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}