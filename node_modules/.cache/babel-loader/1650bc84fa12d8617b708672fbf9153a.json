{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\(React)Task_List\\\\src\\\\components\\\\AddTask\\\\AddTask.js\",\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { useText, useTaskList } from \"../AppContext/AppProvider\";\nimport { Overlay, Tooltip, Alert } from \"react-bootstrap\";\nimport addstyle from \"./addstyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTask = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    getText,\n    setText\n  } = useText();\n  const {\n    getTaskList,\n    setTaskList\n  } = useTaskList();\n  const [show, setShow] = useState(false);\n  const target = useRef(\"\");\n  const displayTarget = useRef(null); /// Função de envio de formulario\n\n  function TaskAlert() {\n    _s();\n\n    const [showModal, setShowModal] = useState(false);\n\n    const handleClose = () => setShowModal(false);\n\n    const handleShow = () => setShowModal(true);\n\n    const [show, setShow] = useState(false);\n    const updateText = useRef();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: showModal,\n        onHide: handleClose,\n        contentClassName: true,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          show: show,\n          variant: \"dark\",\n          style: {\n            padding: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alertHeader\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"alertH5\",\n              children: \"Erro ao criar a tarefa!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"alertButton\",\n              onClick: () => setShow(false),\n              children: \"\\u274C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alertP\",\n            children: \"A tarefa n\\xE3o pode estar vazia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alertP\",\n            children: \"ou come\\xE7ar com um espa\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(TaskAlert, \"B9wg064aWgYC1iQmqNJY17ljTXM=\");\n\n  const createTask = e => {\n    e.preventDefault();\n    var checkText = target.current.value.toString().indexOf(\" \");\n\n    if (checkText !== 0 && target.current.value !== \"\" && target.current.value !== null) {\n      /// Criar objeto \"tarefa\"\n      let newtask = {\n        id: new Date().getTime().toString(),\n        name: target.current.value,\n        done: false\n      }; /// Salvar objeto \"tarefa\" no array\n\n      setTaskList([...getTaskList, newtask]);\n      setText(\"\");\n      setShow(false);\n      target.current.value = \"\";\n    } else {\n      setShow(true);\n    }\n  }; /// Salvar no localstorage\n\n\n  useEffect(() => {\n    localStorage.setItem(\"task\", JSON.stringify(getTaskList));\n  }, [getTaskList]);\n  return (\n    /*#__PURE__*/\n    /// Inicio do formulario\n    _jsxDEV(\"div\", {\n      ref: displayTarget,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        onSubmit: createTask,\n        className: \"addtask\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Adicionar Tarefa\",\n          required: true,\n          ref: target,\n          className: \"addtext\",\n          maxLength: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"addbutton\",\n          onClick: createTask,\n          children: \"\\u2795\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TaskAlert, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this) /// Fim do formulario\n\n  );\n};\n\n_s2(AddTask, \"0CPuBv9BOivVPPc45bXHV2To/bM=\", false, function () {\n  return [useText, useTaskList];\n});\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/(React)Task_List/src/components/AddTask/AddTask.js"],"names":["useEffect","useState","useRef","useText","useTaskList","Overlay","Tooltip","Alert","addstyle","AddTask","getText","setText","getTaskList","setTaskList","show","setShow","target","displayTarget","TaskAlert","showModal","setShowModal","handleClose","handleShow","updateText","padding","createTask","e","preventDefault","checkText","current","value","toString","indexOf","newtask","id","Date","getTime","name","done","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport { useText, useTaskList } from \"../AppContext/AppProvider\";\r\nimport { Overlay, Tooltip, Alert } from \"react-bootstrap\";\r\nimport addstyle from \"./addstyle.css\";\r\n\r\nexport const AddTask = () => {\r\n  const { getText, setText } = useText();\r\n  const { getTaskList, setTaskList } = useTaskList();\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(\"\");\r\n  const displayTarget = useRef(null);\r\n\r\n  /// Função de envio de formulario\r\n\r\n  function TaskAlert() {\r\n    const [showModal, setShowModal] = useState(false)\r\n    const handleClose = () => setShowModal(false)\r\n    const handleShow = () => setShowModal(true)\r\n    const [show, setShow] = useState(false)\r\n    const updateText = useRef()\r\n\r\n   \r\n\r\n    return (\r\n      <div>\r\n        <Modal show={showModal} onHide={handleClose} contentClassName>\r\n        <Alert\r\n                show={show}\r\n                variant=\"dark\"\r\n                style={{padding: \"20px\"}}\r\n              ><div className=\"alertHeader\">\r\n                <h5 className=\"alertH5\">Erro ao criar a tarefa!</h5>\r\n                <button className=\"alertButton\" onClick={() => setShow(false)}>❌</button>\r\n              </div>\r\n                \r\n                <hr></hr>\r\n                <p className=\"alertP\">A tarefa não pode estar vazia</p>\r\n                <p className=\"alertP\">ou começar com um espaço</p>\r\n              </Alert>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const createTask = (e) => {\r\n    e.preventDefault();\r\n\r\n    var checkText = target.current.value.toString().indexOf(\" \");\r\n\r\n    if (\r\n      checkText !== 0 &&\r\n      target.current.value !== \"\" &&\r\n      target.current.value !== null\r\n    ) {\r\n      /// Criar objeto \"tarefa\"\r\n      let newtask = {\r\n        id: new Date().getTime().toString(),\r\n        name: target.current.value,\r\n        done: false,\r\n      };\r\n      /// Salvar objeto \"tarefa\" no array\r\n      setTaskList([...getTaskList, newtask]);\r\n      setText(\"\");\r\n      setShow(false);\r\n      target.current.value = \"\";\r\n    } else {\r\n      setShow(true);\r\n    }\r\n  };\r\n\r\n  /// Salvar no localstorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"task\", JSON.stringify(getTaskList));\r\n  }, [getTaskList]);\r\n\r\n  return (\r\n    /// Inicio do formulario\r\n    <div ref={displayTarget}>\r\n      <form autoComplete=\"off\" onSubmit={createTask} className=\"addtask\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Adicionar Tarefa\"\r\n          required\r\n          ref={target}\r\n          className=\"addtext\"\r\n          maxLength={50}\r\n        />\r\n        <button type=\"submit\" className=\"addbutton\" onClick={createTask}>\r\n          ➕\r\n        </button>\r\n        <TaskAlert></TaskAlert>\r\n      </form>\r\n      \r\n    </div>\r\n\r\n    /// Fim do formulario\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}