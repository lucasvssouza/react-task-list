{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\tasklist2\\\\src\\\\components\\\\ListTask\\\\ListTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport AppContext from '../AppContext/AppContext';\nimport { AppProvider } from '../AppContext/AppProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListTask = _ref => {\n  _s();\n\n  let {\n    getLocalStorage\n  } = _ref;\n  const {\n    getText,\n    setText\n  } = useContext(AppContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskList\",\n    children: JSON.parse(localStorage.getItem('task')).map((individualTask, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"renderTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: individualTask.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }, this)]\n    }, individualTask.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListTask, \"bFF7Wmt7oBZZoEIxl0H44x0hE6A=\");\n\n_c = ListTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/tasklist2/src/components/ListTask/ListTask.js"],"names":["useState","useEffect","useContext","AppContext","AppProvider","ListTask","getLocalStorage","getText","setText","JSON","parse","localStorage","getItem","map","individualTask","index","name","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAACC,IAAAA;AAAD,GAAqB;AAE1C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsBN,UAAU,CAACC,UAAD,CAAtC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cAESM,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC,GAAzC,CAA6C,CAACC,cAAD,EAAgBC,KAAhB,kBAC1C;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOD,cAAc,CAACE;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAAiCF,cAAc,CAACG,EAAhD;AAAA;AAAA;AAAA;AAAA,YADH;AAFT;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAfM;;GAAMZ,Q;;KAAAA,Q","sourcesContent":["import { useState, useEffect, useContext }  from 'react'\r\nimport AppContext from '../AppContext/AppContext'\r\nimport { AppProvider } from '../AppContext/AppProvider'\r\n\r\nexport const ListTask = ({getLocalStorage}) =>{\r\n\r\n    const { getText, setText} = useContext(AppContext)\r\n\r\n    return(\r\n        <div className=\"taskList\">\r\n            {/* Renderizar a lista de tarefas */}\r\n                {JSON.parse(localStorage.getItem('task')).map((individualTask,index) => (\r\n                    <div className='renderTask' key={individualTask.id}>\r\n                        <input type='checkbox'/>\r\n                        <span>{individualTask.name}</span>\r\n                    </div>\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}