{"ast":null,"code":"var _jsxFileName = \"N:\\\\Lucas\\\\GitHub\\\\publico\\\\Projetos\\\\tasklist2\\\\src\\\\components\\\\AddTask\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport AppContext from '../AppContext/AppContext';\nimport { AppProvider } from '../AppContext/AppProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTask = _ref => {\n  _s();\n\n  let {\n    getLocalStorage\n  } = _ref;\n  const {\n    tasklist\n  } = useContext(AppContext); /// Definir state\n\n  const [getText, setText] = useState(''); /// Lista de array\n\n  const [getTaskList, setTaskList] = useState(getLocalStorage());\n  console.log(getTaskList); /// Função de envio de formulario\n\n  const createTask = e => {\n    e.preventDefault(); /// Criar objeto \"tarefa\"\n\n    let newtask = {\n      id: new Date().getTime().toString(),\n      name: getText,\n      done: false\n    };\n    setTaskList([...getTaskList, newtask]);\n    setText('');\n  }; /// Salvar no localstorage\n\n\n  useEffect(() => {\n    localStorage.setItem('task', JSON.stringify(getTaskList));\n  }, [getTaskList]);\n  return (\n    /*#__PURE__*/\n    /// Inicio do formulario\n    _jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n        value: {\n          tasklist: localStorage.getItem('task')\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: tasklist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          autoComplete: \"off\",\n          onSubmit: createTask,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Adicionar Tarefa\",\n            required: true,\n            onChange: e => setText(e.target.value),\n            value: getText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) /// Fim do formulario\n\n  );\n};\n\n_s(AddTask, \"RfASKpeyIyrrM2d8d8Mgrr9g+KE=\");\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["N:/Lucas/GitHub/publico/Projetos/tasklist2/src/components/AddTask/AddTask.js"],"names":["useState","useEffect","useContext","AppContext","AppProvider","AddTask","getLocalStorage","tasklist","getText","setText","getTaskList","setTaskList","console","log","createTask","e","preventDefault","newtask","id","Date","getTime","toString","name","done","localStorage","setItem","JSON","stringify","getItem","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAEA,OAAO,MAAMC,OAAO,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAACC,IAAAA;AAAD,GAAqB;AAGzC,QAAM;AAAEC,IAAAA;AAAF,MAAeL,UAAU,CAACC,UAAD,CAA/B,CAHyC,CAKzC;;AACA,QAAM,CAACK,OAAD,EAAUC,OAAV,IAAqBT,QAAQ,CAAC,EAAD,CAAnC,CANyC,CAQzC;;AACA,QAAM,CAACU,WAAD,EAAcC,WAAd,IAA6BX,QAAQ,CAACM,eAAe,EAAhB,CAA3C;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAVyC,CAYzC;;AACA,QAAMI,UAAU,GAAIC,CAAD,IAAM;AACrBA,IAAAA,CAAC,CAACC,cAAF,GADqB,CAGrB;;AACA,QAAIC,OAAO,GAAG;AACVC,MAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,EADM;AAEVC,MAAAA,IAAI,EAAEd,OAFI;AAGVe,MAAAA,IAAI,EAAE;AAHI,KAAd;AAMAZ,IAAAA,WAAW,CAAC,CAAC,GAAGD,WAAJ,EAAiBO,OAAjB,CAAD,CAAX;AACAR,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAZD,CAbyC,CA2BzC;;;AACAR,EAAAA,SAAS,CAAC,MAAI;AACVuB,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAejB,WAAf,CAA7B;AACH,GAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;AAIA;AAAA;AACI;AAEA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACA,QAAC,UAAD,CAAY,QAAZ;AAAqB,QAAA,KAAK,EAAE;AAACH,UAAAA,QAAQ,EAAEiB,YAAY,CAACI,OAAb,CAAqB,MAArB;AAAX,SAA5B;AAAA,gCACA;AAAA,oBAAIrB;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI;AAAM,UAAA,YAAY,EAAC,KAAnB;AAAyB,UAAA,QAAQ,EAAEO,UAAnC;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,kBAA/B;AAAkD,YAAA,QAAQ,MAA1D;AAA2D,YAAA,QAAQ,EAAGC,CAAD,IAAON,OAAO,CAACM,CAAC,CAACc,MAAF,CAASC,KAAV,CAAnF;AAAqG,YAAA,KAAK,EAAEtB;AAA5G;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAHJ,CAcI;;AAdJ;AAgBH,CAhDM;;GAAMH,O;;KAAAA,O","sourcesContent":["import { useState, useEffect, useContext }  from 'react'\r\nimport AppContext from '../AppContext/AppContext'\r\nimport { AppProvider } from '../AppContext/AppProvider'\r\n\r\nexport const AddTask = ({getLocalStorage}) =>{\r\n    \r\n\r\n    const { tasklist } = useContext(AppContext)\r\n\r\n    /// Definir state\r\n    const [getText, setText] = useState('')\r\n\r\n    /// Lista de array\r\n    const [getTaskList, setTaskList] = useState(getLocalStorage())\r\n    console.log(getTaskList)\r\n\r\n    /// Função de envio de formulario\r\n    const createTask = (e) =>{\r\n        e.preventDefault()\r\n\r\n        /// Criar objeto \"tarefa\"\r\n        let newtask = {\r\n            id: new Date().getTime().toString(),\r\n            name: getText,\r\n            done: false\r\n        }\r\n\r\n        setTaskList([...getTaskList, newtask])\r\n        setText('')\r\n    }\r\n\r\n    /// Salvar no localstorage\r\n    useEffect(()=>{\r\n        localStorage.setItem('task', JSON.stringify(getTaskList))\r\n    },[getTaskList])\r\n\r\n    return(\r\n        /// Inicio do formulario\r\n        \r\n        <div className=\"form\">\r\n        <AppContext.Provider value={{tasklist: localStorage.getItem('task')}}>\r\n        <p>{tasklist}</p>\r\n            <form autoComplete=\"off\" onSubmit={createTask}>\r\n                <input type='text' placeholder=\"Adicionar Tarefa\" required onChange={(e) => setText(e.target.value)} value={getText} />\r\n                <button type=\"submit\">\r\n                      +\r\n                </button>\r\n            </form>\r\n        </AppContext.Provider>\r\n        </div>\r\n        /// Fim do formulario\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}